#include <Arduino.h>
#include "./my_functions.h"
#include "Adafruit_GC9A01A.h"
#include "Wire.h"
#include <Adafruit_INA219.h>
#include <SimpleFOC.h>
#include "haptic.h"
#include <cmath>

#include <TFT_eSPI.h>
// Width and height of sprite
#define TFT_WIDTH  240
#define TFT_HEIGHT 240


TFT_eSPI tft = TFT_eSPI();
TFT_eSprite background = TFT_eSprite(&tft);
TFT_eSprite dot = TFT_eSprite(&tft);



/*-----------------------------------------------
	LCD Display
-----------------------------------------------*/
#define MISO   -1
#define SCLK   4
#define MOSI   5
#define RES    6
#define DC     7
#define CS     15

float h = 0;
float outerRadius = 0;
float innerRadius = 0;
uint16_t screenBuffer[240 * 240];

/*-----------------------------------------------
	Position Sensor
-----------------------------------------------*/
MagneticSensorI2C as5600 = MagneticSensorI2C(AS5600_I2C);
TwoWire positionSensorI2C(1);
#define pos_SDA_PIN 17
#define pos_SCL_PIN 16

std::array<float, 4> coordinates = {0.0f, 0.0f, 0.0f, 0.0f};
CircularBuffer buffer;
bool isFluttering = false;

void setup() {
	Serial.begin(115200);

	// Add some sample values
	buffer.add(0.0f);
	buffer.add(0.0f);
	buffer.add(0.0f);
	
	
	positionSensorI2C.begin(pos_SDA_PIN, pos_SCL_PIN);
	as5600.init(&positionSensorI2C);
	
	
	tft.begin();
	tft.setRotation(1);
	tft.fillScreen(GC9A01A_BLACK);
	
	background.createSprite(240, 240);
	background.setPivot(TFT_WIDTH / 2, TFT_HEIGHT / 2);
	background.fillSprite(TFT_TRANSPARENT);
	background.pushSprite(0,0);

	dot.createSprite(20, 20);
	dot.setPivot(10, TFT_HEIGHT / 2);
	dot.fillSprite(TFT_TRANSPARENT);



	h = tft.getViewportHeight();
	outerRadius = h/2;
	innerRadius = (h/2) * 0.25;

	for (float i = 0; i < 361; i++) {
		
		addToCache(
			i,
			((innerRadius * cos(i * M_PI / 180.0f)) + outerRadius),
			((innerRadius * sin(i * M_PI / 180.0f)) + outerRadius),
			((outerRadius - 20) * cos(i * M_PI / 180.0f)) + outerRadius,
			((outerRadius - 20) * sin(i * M_PI / 180.0f)) + outerRadius
		);
	}
}

void loop() {
	int prev = 0;
	for (int rot = 0; rot < 361; rot++) {
		dot.fillSmoothCircle(12, 14, 9, GC9A01A_BLACK, GC9A01A_BLACK);
		dot.pushRotated(&background, prev, TFT_TRANSPARENT);
		dot.fillSmoothCircle(12, 14, 9, GC9A01A_WHITE, GC9A01A_BLACK);
		dot.pushRotated(&background, rot, TFT_TRANSPARENT);
		background.pushSprite(0,0,TFT_TRANSPARENT);
		prev = rot;
	}
}
